---
to: "<%= componentType === 'FlatList' ? `src/components/${folder}/${h.changeCase.pascal(name)}/${h.changeCase.pascal(name)}.tsx` : null %>"
---
import * as React from 'react'
import { useCallback, useMemo } from '@hooks'
import { FlatList } from '@components'
import { FlatListProps, TItem } from '@typings'
import <%= h.changeCase.pascal(name) %>Item from './<%= h.changeCase.pascal(name) %>Item'
import styles from './styles.css'

type TProps = FlatListProps<TItem> & {
	onPress: (id: TItem["id"]) => void
	hidden?: boolean
}

const <%= h.changeCase.pascal(name) %>: React.FC<TProps> = ({ hidden, data = [], onPress, ...flatListProps }) => {

	const handlePress = useCallback(
		(id) => {
			onPress(id)
		},
		[onPress],
	)

	// Render list.
	const keyExtractor = useCallback(item => String(item.id), [])
	const renderItem = useCallback(
		({ item }) => (
			<<%= h.changeCase.pascal(name) %>Item {...item} onPress={handlePress} />
		),
		[],
	)

	return hidden ? null : (
		<FlatList 
			data={data}
			renderItem={renderItem} 
			keyExtractor={keyExtractor} 
			extraData={null}
			contentContainerStyle={styles.contentContainer} 
			keyboardShouldPersistTaps="handled" 
			bounces={false}
			{...flatListProps}
		/>
	)
}

export default <%= h.changeCase.pascal(name) %>;
